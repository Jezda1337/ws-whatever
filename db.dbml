Table messages {
id int [pk, increment]
room_id int [ref: > rooms.id, not null]
sender_id int [ref: > users.id, not null]
content text [not null]
reply_to_id int [ref: > messages.id]

is_pinned bool [default: false]
is_edited bool [default: false]

created_at timestamp [default: `now()`]
updated_at timestamp
deleted_at timestamp
}

Table message_attachments {
id int [pk, increment]
message_id int [ref: > messages.id, not null]
file_path text [not null]
file_type text [not null]
file_size int
file_mime text [not null]
created_at timestamp [default: `now()`]
}

Table rooms {
id int [pk, increment]
name text
community_id int [ref: > communities.id, not null]
type room_type [not null]
created_at timestamp [default: `now()`]
}

Table room_participants {
id int [pk, increment]
room_id int [ref: > rooms.id, not null]
user_id int [ref: > users.id, not null]
role varchar(50) [not null, default: 'member']
joined_at timestamp [default: `now()`]

indexes {
(room_id, user_id) [unique]
}
}

Table message_reads {
id int [pk, increment]
message_id int [ref: > messages.id, not null]
user_id int [ref: > users.id, not null]
read_at timestamp

indexes {
(message_id, user_id) [unique]
}
}

Table message_reactions {
id int [pk, increment]
message_id int [ref: > messages.id, not null]
user_id int [ref: > users.id, not null]
reaction_type varchar(50) [not null]
created_at timestamp [default: `now()`]
}

Enum room_type {
group
direct
}

// External service tables
Table communities { id int [pk] }
Table users { id int [pk] }
